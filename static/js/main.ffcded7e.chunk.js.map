{"version":3,"sources":["components/Input.jsx","components/Button.jsx","components/Form.jsx","index.jsx"],"names":["Input","id","className","label","error","attrs","classes","classNames","name","htmlFor","defaultProps","Button","children","onClick","disabled","active","event","preventDefault","Form","formik","useFormik","initialValues","email","birthdate","message","validationSchema","Yup","shape","required","matches","onSubmit","values","console","log","handleSubmit","placeholder","type","value","onChange","handleChange","touched","errors","handleReset","isSubmitting","dirty","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffcded7e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Input = ({ id, className, label, error, ...attrs }) => {\n  const classes = classNames('input', className, { error });\n\n  return (\n    <div className=\"input-field\">\n      <input name={id} id={id} className={classes} {...attrs} />\n      {label && (\n        <label className=\"input-label\" htmlFor={id}>\n          {label}\n        </label>\n      )}\n      {error && <span className=\"message-error\">{error}</span>}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  label: PropTypes.string,\n  error: PropTypes.string,\n};\n\nInput.defaultProps = {\n  className: '',\n  label: '',\n  error: '',\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Button = ({ children, onClick, className, disabled, active, ...attrs }) => {\n  const onClickAction = (event) => (disabled ? event.preventDefault() : onClick(event));\n  const classes = classNames('btn', className, { active });\n\n  return (\n    <button className={classes} disabled={disabled} onClick={onClickAction} {...attrs}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  children: 'Default button',\n  onClick: () => {},\n  className: '',\n  disabled: false,\n  active: false,\n};\n\nexport default Button;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport Input from './Input';\nimport Button from './Button';\n\nfunction Form() {\n  const formik = useFormik({\n    initialValues: {\n      name: 'Вася',\n      email: '',\n      birthdate: '',\n      message: 'Привет, Петя!',\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().required('Обязательное поле'),\n      email: Yup.string().email('Неккоректный Email-адрес').required('Обязательное поле'),\n      birthdate: Yup.string()\n        .matches(\n          /^([0]?[1-9]|[1|2][0-9]|[3][0|1])[./-]([0]?[1-9]|[1][0-2])[./-]([0-9]{2})$/,\n          'Неверный формат'\n        )\n        .required('Обязательное поле'),\n      message: Yup.string().required('Обязательное поле'),\n    }),\n    onSubmit: (values) => {\n      console.log(values);\n    },\n  });\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={formik.handleSubmit}>\n        <h2 className=\"form-title\">Отправить сообщение</h2>\n        <p className=\"form-subtitle\">Анонимные сообщения рассматриваются</p>\n        <div className=\"form-group\">\n          <Input\n            name=\"name\"\n            id=\"name\"\n            label=\"Имя\"\n            className=\"input\"\n            placeholder=\"&nbsp;\"\n            type=\"text\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            error={formik.touched.name && formik.errors.name}\n          />\n          <Input\n            name=\"email\"\n            id=\"email\"\n            label=\"Email\"\n            className={formik.errors.email ? 'input-error' : 'input'}\n            placeholder=\"&nbsp;\"\n            type=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && formik.errors.email}\n          />\n          <Input\n            name=\"birthdate\"\n            id=\"birthdate\"\n            label=\"Дата рождения\"\n            className={formik.errors.birthdate ? 'input-error' : 'input'}\n            placeholder=\"&nbsp;\"\n            type=\"text\"\n            value={formik.values.birthdate}\n            onChange={formik.handleChange}\n            error={formik.touched.birthdate && formik.errors.birthdate}\n          />\n        </div>\n        <Input\n          name=\"message\"\n          id=\"message\"\n          label=\"Сообщение\"\n          className={formik.errors.message ? 'input-error' : 'input'}\n          placeholder=\"&nbsp;\"\n          type=\"text\"\n          value={formik.values.message}\n          onChange={formik.handleChange}\n          error={formik.touched.message && formik.errors.message}\n        />\n        <div className=\"btn-container\">\n          <Button className=\"btn btn-clear\" onClick={formik.handleReset}>\n            Очистить\n          </Button>\n          <Button className=\"btn\" type=\"submit\" disabled={formik.isSubmitting || !formik.dirty}>\n            Отправить\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Form from './components/Form';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Form />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}